unbind C-b
set -g prefix C-a
bind C-a send prefix
set -g status-right '#[fg=white]%Y-%m-%d %H:%M#[default]'
set-option -g status-right "%a %d %b %I:%M %p"
# toggle mouse
# bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"
set -g mouse on

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind z

# pane resizing
bind -r Left resize-pane -L 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2
bind -r Right resize-pane -R 2


# WINDOWS-------------------------------------------------------------------------------
unbind '"'
unbind %
bind-key v split-window -v
bind-key h  split-window -h
set -g base-index 1           # start windows numbering at 1
#setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set-window-option -g status-left " #S "

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

bind -n S-Left previous-window 
bind -n S-Right next-window
bind-key -n C-Left swap-window -d -t -1
bind-key -n C-Right swap-window -d -t +1

# new windows retains current path, possible values are:
# - true
# -false (default)
tmux_conf_new_window_retain_current_path=false


# inactive window.
set-window-option -g window-status-format '#[fg=colour230]#I#[fg=colour230]#(echo :) #[default, bold]#W'
# current window.
set-window-option -g window-status-current-format '#[fg=colour230, bold]#I#[fg=colour230]#(echo :)#[fg=colour230]#W#[fg=dim]#F' 


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from



# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'dracula/tmux'
set -g @plugin "arcticicestudio/nord-tmux"

# for nvim resurrection
set -g @resurrect-strategy-nvi 'session'

# set -g @dracula-show-powerline true
# set -g @dracula-show-flags true
# set -g @dracula-show-left-icon session
set -g status-position top


# ColorScheme STYLUX
# set -g @plugin 'a-morales/stylux'
# set -g @seperators "powerline"

# POMODORO Plugin
set -g status-left "#{pomodoro_status}"
set -g @pomodoro_show_intervals "#[fg=$color_gray][%s/%s]"
set -g status-interval 1                       # Refresh the status line every second
set -g @pomodoro_on "#[fg=$text_red]🍅 "
set -g @pomodoro_complete "#[fg=$text_green]🍅 "
set -g @pomodoro_pause "#[fg=$color_yellow]🍅 "
set -g @pomodoro_prompt_break "#[fg=$color_green]🕤 ? "
set -g @pomodoro_prompt_pomodoro "#[fg=$color_gray]🕤 ? "
set -g @pomodoro_toggle 'p'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 25            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?

set -g @pomodoro_on " 🍅"                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete " ✔︎"                 # The formatted output when the break is running
set -g @pomodoro_pause " ⏸︎"                    # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break " ⏲︎ break?"      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro " ⏱︎ start?"   # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'                   # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on'           # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'             # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
